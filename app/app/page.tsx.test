'use client';

import { useState } from 'react';
import { VizPayload } from '@/types/viz';
// import VizRenderer from '@/components/VizRenderer';
// import SimpleTestData from '@/components/SimpleTestData';

export default function SimplePage() {
  const [data, setData] = useState<VizPayload | null>(null);
  const [showTable, setShowTable] = useState(false);

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            SQL Agent Insights - Test Mode
          </h1>
          <p className="text-gray-600">
            Test the enhanced visualization system with sample data
          </p>
        </div>

        {/* Test Data */}
        <div className="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <h3 className="text-lg font-semibold text-blue-900 mb-3">üß™ Test Data</h3>
          <button
            onClick={() => {
              const testData: VizPayload = {
                plan: {
                  intent: "map",
                  question: "Show all trip locations on a map",
                  dataset: "trips",
                  sql: "SELECT trip_id, pickup_lat, pickup_lng, riders FROM trips LIMIT 20",
                  fields: [
                    { name: "trip_id", type: "cat" },
                    { name: "pickup_lat", type: "lat" },
                    { name: "pickup_lng", type: "lon" },
                    { name: "riders", type: "quant" }
                  ],
                  chart: {
                    type: "scatter",
                    x: "pickup_lng",
                    y: "pickup_lat",
                    tooltip: ["trip_id", "riders"]
                  },
                  narrative: "Quick test: Showing 20 trip locations on a map with rider counts.",
                  quality: { rowCount: 20, rowCountCapHit: false, warnings: [] }
                },
                rows: Array.from({ length: 20 }, (_, i) => ({
                  trip_id: `trip_${i + 1}`,
                  pickup_lat: 30.267153 + (Math.random() - 0.5) * 0.1,
                  pickup_lng: -97.743061 + (Math.random() - 0.5) * 0.1,
                  riders: Math.floor(Math.random() * 10) + 1
                }))
              };
              setData(testData);
            }}
            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            üó∫Ô∏è Load Map Data
          </button>
        </div>

        {/* Results */}
        {data && (
          <div className="space-y-6">
            {/* Narrative */}
            {data.plan.narrative && (
              <div className="p-6 bg-white rounded-lg shadow-sm">
                <h2 className="text-lg font-semibold text-gray-900 mb-2">Insight</h2>
                <p className="text-gray-700">{data.plan.narrative}</p>
              </div>
            )}

            {/* Action Chips */}
            <div className="flex gap-3">
              <button
                onClick={() => setShowTable(!showTable)}
                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                  showTable
                    ? 'bg-blue-100 text-blue-800 border border-blue-200'
                    : 'bg-gray-100 text-gray-700 border border-gray-200 hover:bg-gray-200'
                }`}
              >
                Show Table
              </button>
            </div>

            {/* Visualization */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <div className="p-8 text-center text-gray-500">
                <p>Visualization component temporarily disabled for testing</p>
                <p>Data loaded: {data.rows.length} rows</p>
                <p>Chart type: {data.plan.chart.type}</p>
                <p>Intent: {data.plan.intent}</p>
              </div>
            </div>
          </div>
        )}

        {/* Instructions */}
        {!data && (
          <div className="mt-12 p-6 bg-white rounded-lg shadow-sm">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">How to Test</h2>
            <div className="space-y-3 text-gray-600">
              <p>1. Click &quot;Load Map Data&quot; to test the enhanced map visualization with multiple modes</p>
              <p>2. Click &quot;Load Bar Chart Data&quot; to test categorical data visualization</p>
              <p>3. Use the visualization selector to switch between different chart types</p>
              <p>4. Try different map modes: Points, Heatmap, Clustered, and Categorical</p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
